{"version":3,"sources":["webpack://babelnodejs/index\\.js).*\\.js$/","webpack://babelnodejs/./api/app.js","webpack://babelnodejs/./api/config/config.js","webpack://babelnodejs/./api/controllers/authController.js","webpack://babelnodejs/./api/controllers/categoryController.js","webpack://babelnodejs/./api/controllers/colorController.js","webpack://babelnodejs/./api/controllers/orderController.js","webpack://babelnodejs/./api/controllers/productController.js","webpack://babelnodejs/./api/controllers/productVariationController.js","webpack://babelnodejs/./api/controllers/productsellerController.js","webpack://babelnodejs/./api/controllers/productsellerdetailController.js","webpack://babelnodejs/./api/controllers/sellerProductImageController.js","webpack://babelnodejs/./api/controllers/sellerShopController.js","webpack://babelnodejs/./api/controllers/sessionController.js","webpack://babelnodejs/./api/controllers/sizeController.js","webpack://babelnodejs/./api/controllers/todoController.js","webpack://babelnodejs/./api/controllers/todoItemsController.js","webpack://babelnodejs/./api/controllers/typeController .js","webpack://babelnodejs/./api/controllers/variationController.js","webpack://babelnodejs/./api/middlewares/auth.js","webpack://babelnodejs/./api/middlewares/authorize.js","webpack://babelnodejs/./api/middlewares/authorizeSellershop.js","webpack://babelnodejs/./api/middlewares/upload.js","webpack://babelnodejs/./api/models/catalogproduct.js","webpack://babelnodejs/./api/models/catalogue.js","webpack://babelnodejs/./api/models/catalogueproduct.js","webpack://babelnodejs/./api/models/cataloguesellerproduct.js","webpack://babelnodejs/./api/models/categories.js","webpack://babelnodejs/./api/models/categorsellerproduct.js","webpack://babelnodejs/./api/models/category.js","webpack://babelnodejs/./api/models/catelogue.js","webpack://babelnodejs/./api/models/checkout.js","webpack://babelnodejs/./api/models/childcategory.js","webpack://babelnodejs/./api/models/color.js","webpack://babelnodejs/./api/models/condition.js","webpack://babelnodejs/./api/models/imagesgellery.js","webpack://babelnodejs/./api/models/index.js","webpack://babelnodejs/./api/models/order.js","webpack://babelnodejs/./api/models/product.js","webpack://babelnodejs/./api/models/productentery.js","webpack://babelnodejs/./api/models/productsaleoffer.js","webpack://babelnodejs/./api/models/productseller.js","webpack://babelnodejs/./api/models/productsellerdetail.js","webpack://babelnodejs/./api/models/productvariation.js","webpack://babelnodejs/./api/models/sellerproductimage.js","webpack://babelnodejs/./api/models/sellerproductimagesellerproductdetail.js","webpack://babelnodejs/./api/models/sellershop.js","webpack://babelnodejs/./api/models/sellimage.js","webpack://babelnodejs/./api/models/size.js","webpack://babelnodejs/./api/models/subcategory.js","webpack://babelnodejs/./api/models/todo.js","webpack://babelnodejs/./api/models/todoitem.js","webpack://babelnodejs/./api/models/type.js","webpack://babelnodejs/./api/models/user.js","webpack://babelnodejs/./api/models/variation.js","webpack://babelnodejs/./api/providers/mail.js","webpack://babelnodejs/./api/routes/index.js","webpack://babelnodejs/./api/utils/index.js","webpack://babelnodejs/./api/utils/sellershop.js","webpack://babelnodejs/external \"@babel/core\"","webpack://babelnodejs/external \"base-64\"","webpack://babelnodejs/external \"bcryptjs\"","webpack://babelnodejs/external \"body-parser\"","webpack://babelnodejs/external \"cookie-parser\"","webpack://babelnodejs/external \"cors\"","webpack://babelnodejs/external \"dotenv\"","webpack://babelnodejs/external \"express\"","webpack://babelnodejs/external \"express-session\"","webpack://babelnodejs/external \"fs\"","webpack://babelnodejs/external \"jsonwebtoken\"","webpack://babelnodejs/external \"mailgun-js\"","webpack://babelnodejs/external \"morgan\"","webpack://babelnodejs/external \"multer\"","webpack://babelnodejs/external \"nodemailer\"","webpack://babelnodejs/external \"path\"","webpack://babelnodejs/external \"regenerator-runtime\"","webpack://babelnodejs/external \"sequelize\"","webpack://babelnodejs/external \"stripe\"","webpack://babelnodejs/external \"validator\"","webpack://babelnodejs/webpack/bootstrap","webpack://babelnodejs/webpack/runtime/compat get default export","webpack://babelnodejs/webpack/runtime/define property getters","webpack://babelnodejs/webpack/runtime/hasOwnProperty shorthand","webpack://babelnodejs/webpack/runtime/make namespace object","webpack://babelnodejs/webpack/startup"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","app","express","use","morgan","cors","credentials","origin","urlencoded","extended","json","cookieParser","sess","secret","resave","saveUninitialized","cookie","get","set","secure","session","routes","port","process","env","PORT","listen","console","log","require","development","username","DB_USERNAME","password","DB_PASSWORD","database","DB_DATABASE","host","DB_HOST","dialect","test","production","config","User","models","Productsellerdetail","Order","res","next","user","findAll","include","as","model","message","success","error","name","email","body","hash","hashPassword","create","token","jwtToken","Email","status","send","findOne","where","ComparePassword","verifiedAccount","params","values","condition","data","update","Category","SubCategory","ChildCategory","Categories","Catalogue","CatalogueProduct","CatalogProduct","CategorSellerProduct","category","title","description","brandName","categoryId","Subcategory","subcategoryId","Childcategory","subcategories","categoriesSellerProduct","categoreisSeller","parentId","categoriesList","categorySeller","filter","undefined","cate","push","cataloguename","catalogueslug","children","createcategories","findAllcategoriesSeller","categoryList","sub_catelogues","findByPk","then","async","Color","color","colors","Stripe","Products","Checkout","sequelize","order","work","t","client","transaction","commit","err","rollback","address","phone","city","checkout","key","obj","prop","hasOwnProperty","autocommit","decoded","allOrders","userId","cartItems","customer","customers","source","charger","charges","amount","price","currency","receipt_email","image","Product","ProductSaleOffer","CreateGUID","guid","replace","c","r","Math","random","toString","product","Oneproductsellerdetail","ProductVariation","ImagesGellery","Condition","Variation","createvariation","productvariation","size","sellersku","saleprice","quentity","conditionId","sellerproductId","productVariation","bulkCreate","base64","productVariationOne","attributes","Productseller","productseller","Op","Sequelize","Size","type","SellerShop","SellImage","SellerProductImage","catalogues","stock","productsellerdetail","length","addCatalogues","search","productsellerdetailSearch","like","productbysellerslug","productId","variationId","files","forEach","element","index","arr","SellerproductImage","imagegellery","filename","jwtTokens","market","location","imageUrl","sellerimage","file","sellerShop","sellerT","Seller","sellersearch","SellerSearchs","usersinfo","end","setHeader","Todo","todo","myTodos","TodoItem","myTodo","todoId","updateTodo","returning","plain","destroy","text","items","todoItemId","updateItem","item","typeCreate","cId","ColorVariation","colorVariationOne","colorId","validator","headers","authorization","split","jwt","JWT_SECRET","expiresIn","JWT_SECRETS","deocded","sellershopId","selleruser","storage","diskStorage","destination","cb","fieldname","Date","now","originalname","multer","fileFilter","mimetype","startsWith","DataTypes","define","catalogue","STRING","INTEGER","associate","belongsToMany","through","foreignKey","otherKey","belongsTo","hasMany","CatalogueSellerProduct","CatalogueId","ProductsellerdetailId","categoryName","mainCategory","Catelogue","cateloguename","basename","path","__filename","envVars","db","use_env_variable","readdirSync","__dirname","indexOf","slice","import","context","sequelizeModel","modelName","qty","checkoutId","catalog_id","BOOLEAN","ProductEntery","productselllerId","sizeId","typeId","product_id","discount_price","start_date","DATE","end_date","childcategoryId","onDelete","onUpdate","DOUBLE","sellimg","SellerProductImageSellerProductDetail","sellerproductimageId","sellerproductdetailId","sellimage","productsellerId","sellerSKU","UUID","mailgun","apiKey","MAIL_API_KEY","domain","MAIL_DOMAIN_KEY","nodemailer","userInfo","transporter","debug","logger","connection","auth","EMAIL_USER","pass","EMAIL_PASS","tls","rejectUnauthorized","info","sendMail","from","to","subject","html","messageId","post","patch","authorize","todos","put","delete","todoItems","uploadFile","productsellerController","productsellerdetailController","orderController","colorController","sizeController","typeController","SellerShopController","SellerProductImageController","productVariationController","variationController","createToken","verifyToken","bcrypt","createTokens","verifyTokens","__webpack_module_cache__","moduleId","__webpack_modules__","n","getter","__esModule","d","a","definition","defineProperty","enumerable","prototype","call","Symbol","toStringTag","value"],"mappings":"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","file":"bundle.js","sourcesContent":["var map = {\n\t\"./catalogproduct.js\": \"./api/models/catalogproduct.js\",\n\t\"./catalogue.js\": \"./api/models/catalogue.js\",\n\t\"./catalogueproduct.js\": \"./api/models/catalogueproduct.js\",\n\t\"./cataloguesellerproduct.js\": \"./api/models/cataloguesellerproduct.js\",\n\t\"./categories.js\": \"./api/models/categories.js\",\n\t\"./categorsellerproduct.js\": \"./api/models/categorsellerproduct.js\",\n\t\"./category.js\": \"./api/models/category.js\",\n\t\"./catelogue.js\": \"./api/models/catelogue.js\",\n\t\"./checkout.js\": \"./api/models/checkout.js\",\n\t\"./childcategory.js\": \"./api/models/childcategory.js\",\n\t\"./color.js\": \"./api/models/color.js\",\n\t\"./condition.js\": \"./api/models/condition.js\",\n\t\"./imagesgellery.js\": \"./api/models/imagesgellery.js\",\n\t\"./order.js\": \"./api/models/order.js\",\n\t\"./product.js\": \"./api/models/product.js\",\n\t\"./productentery.js\": \"./api/models/productentery.js\",\n\t\"./productsaleoffer.js\": \"./api/models/productsaleoffer.js\",\n\t\"./productseller.js\": \"./api/models/productseller.js\",\n\t\"./productsellerdetail.js\": \"./api/models/productsellerdetail.js\",\n\t\"./productvariation.js\": \"./api/models/productvariation.js\",\n\t\"./sellerproductimage.js\": \"./api/models/sellerproductimage.js\",\n\t\"./sellerproductimagesellerproductdetail.js\": \"./api/models/sellerproductimagesellerproductdetail.js\",\n\t\"./sellershop.js\": \"./api/models/sellershop.js\",\n\t\"./sellimage.js\": \"./api/models/sellimage.js\",\n\t\"./size.js\": \"./api/models/size.js\",\n\t\"./subcategory.js\": \"./api/models/subcategory.js\",\n\t\"./todo.js\": \"./api/models/todo.js\",\n\t\"./todoitem.js\": \"./api/models/todoitem.js\",\n\t\"./type.js\": \"./api/models/type.js\",\n\t\"./user.js\": \"./api/models/user.js\",\n\t\"./variation.js\": \"./api/models/variation.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./api/models sync recursive ^\\\\.\\\\/(?!index\\\\.js).*\\\\.js$\";","import express from 'express';\r\nimport { urlencoded, json } from 'body-parser';\r\nimport routes from './routes/index';\r\nimport session from 'express-session';\r\nimport cookieParser from 'cookie-parser';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\n\r\nconst app = express();\r\n\r\napp.use(morgan('dev'));\r\napp.use(cors({ credentials: true, origin: true }));\r\napp.use(urlencoded({ extended: false }))\r\napp.use(json());\r\napp.use(cookieParser())\r\n// app.use(session({\r\n\r\n//     secret: 'keyboard cat',\r\n//     resave: false,\r\n//     saveUninitialized: true,\r\n//     cookie: { secure: false }\r\n// }));\r\n\r\nvar sess = {\r\n  secret: 'keyboard cat',\r\n  resave: false,\r\n  saveUninitialized: true,\r\n  cookie: {}\r\n}\r\n\r\nif (app.get('env') === 'DEVELOPMENT') {\r\n  app.set('trust proxy', 1) // trust first proxy\r\n  sess.cookie.secure = true // serve secure cookies\r\n}\r\n\r\napp.use(session(sess));\r\napp.use('/image', express.static('public/uploads'))\r\nroutes(app);\r\nconst port = process.env.PORT\r\napp.listen(port, () => {\r\n  console.log(`Server is ready ${port}`)\r\n})","require('dotenv').config(); // this is important!\n\nmodule.exports = {\n  development: {\n    username: process.env.DB_USERNAME,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_DATABASE,\n    host: process.env.DB_HOST,\n    dialect: 'mysql'\n  },\n  test: {\n    username: process.env.DB_USERNAME,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_DATABASE,\n    host: process.env.DB_HOST,\n    dialect: 'mysql'\n  },\n  production: {\n    username: process.env.DB_USERNAME,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_DATABASE,\n    host: process.env.DB_HOST,\n    dialect: 'mysql'\n  }\n};\n\n","import models from \"../models\";\r\nimport SendMail, { Email } from \"../providers/mail\";\r\nimport { hashPassword, jwtToken, ComparePassword } from \"../utils\";\r\nimport nodemailer from \"nodemailer\";\r\nimport { config } from \"dotenv\";\r\n// import { sign } from 'jsonwebtoken';\r\nconfig();\r\nconst { User } = models;\r\nconst { Productsellerdetail } = models;\r\nconst { Order } = models;\r\n\r\nconst auth = {\r\n  async fetchAll(req, res, next) {\r\n    try {\r\n      const user = await User.findAll({\r\n        //  where:{\r\n        //      userId:decoded.userId\r\n        // },\r\n        include: [\r\n          {\r\n            // model: Productsellerdetail,\r\n            as: \"productsellerdetails\",\r\n            model: Order,\r\n            as: \"orders\",\r\n          },\r\n        ],\r\n      });\r\n      // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n      return res.json({\r\n        user,\r\n        message: { success: \"all user show successfully!\" },\r\n      });\r\n    } catch (error) {\r\n      return next(new Error(error));\r\n    }\r\n  },\r\n  async signUp(req, res, next) {\r\n    try {\r\n      const { name, email, password } = req.body;\r\n      const hash = hashPassword(password);\r\n      const user = await User.create({ name, email, password: hash });\r\n      const token = jwtToken.createToken(user);\r\n      await Email(user);\r\n      return res.status(201).send({ token, user });\r\n    } catch (e) {\r\n      return next(new Error(e));\r\n    }\r\n  },\r\n  async signIn(req, res, next) {\r\n    try {\r\n      const { email, password } = req.body;\r\n      const user = await User.findOne({\r\n        where: {\r\n          email,\r\n        },\r\n      });\r\n      if (user && ComparePassword(password, user.password)) {\r\n        const { name, id, verifiedAccount } = user;\r\n        console.log(user);\r\n        const token = jwtToken.createToken(user);\r\n        return res\r\n          .status(200)\r\n          .send({\r\n            token,\r\n            user: { id, name, email, verifiedAccount },\r\n            message: { success: \"You are login successfull!\" },\r\n          });\r\n      } else {\r\n        return res\r\n          .status(400)\r\n          .send({ error: \"invalid email/password does not matched\" });\r\n      }\r\n    } catch (e) {\r\n      return next(new Error(e));\r\n    }\r\n  },\r\n  async fetchOneUserUnverified(req, res, next) {\r\n    try {\r\n      const user = await User.findOne({\r\n        where: {\r\n          id: req.params.id,\r\n        },\r\n      });\r\n      if (user.verifiedAccount) {\r\n        return res.json({\r\n          user: user.verifiedAccount,\r\n          message: { success: \"your account is verified!\" },\r\n        });\r\n      }\r\n      return res.json({\r\n        user: user.verifiedAccount,\r\n        message: {\r\n          success:\r\n            \"your account not verified! Pleas check the email and your account verified\",\r\n        },\r\n      });\r\n    } catch (error) {\r\n      return next(new Error(error));\r\n    }\r\n  },\r\n  async AccountVerification(req, res, next) {\r\n    try {\r\n      const user = await User.findOne({\r\n        where: {\r\n          id: req.params.id,\r\n        },\r\n      });\r\n      if (!user) {\r\n        return res.status(401).send({ message: \"user not Found!\" });\r\n      }\r\n      const values = {\r\n        verifiedAccount: req.body.verifiedAccount || user.verifiedAccount,\r\n      };\r\n      const condition = { where: { id: req.params.id } };\r\n      const data = User.update(values, condition);\r\n      return res\r\n        .status(200)\r\n        .send({ data: data, message: \"your Account is verified\" });\r\n    } catch (error) {\r\n      res.status(400).send({ error: error });\r\n      // return next(new Error(error))\r\n    }\r\n  },\r\n};\r\nexport default auth;\r\n","import models from '../models';\r\nconst { Category } = models;\r\nconst { SubCategory } = models;\r\nconst { ChildCategory } = models;\r\nconst { Categories } = models;\r\nconst { Catalogue } = models;\r\nconst { CatalogueProduct } = models;\r\nconst { CatalogProduct } = models;\r\nconst { CategorSellerProduct } = models;\r\nconst category = {\r\n\r\n    async create(req, res, next) {\r\n        try {\r\n            const { title, description } = req.body;\r\n            console.log(req.body, title, description);\r\n            const category = await Category.create({ title, description })\r\n            return res.status(201).send({ category, message: { success: \"category has been created by successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async SubCategoryCreate(req, res, next) {\r\n        try {\r\n            const { brandName, categoryId } = req.body;\r\n            console.log(req.body);\r\n            const Subcategory = await SubCategory.create({ brandName, categoryId })\r\n            return res.status(201).send({ data: Subcategory, message: { success: \"Subcategory has been created by successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async ChildCategoryCreate(req, res, next) {\r\n        try {\r\n            const { name, subcategoryId, categoryId } = req.body;\r\n            const Childcategory = await ChildCategory.create({ name, subcategoryId, categoryId })\r\n            return res.status(201).send({ Childcategory, message: { success: \"Childcategory has been created by successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async MainCategoryfetchAll(req, res, next) {\r\n        try {\r\n            const category = await Category.findAll();\r\n\r\n            return res.status(200).send({ category, message: { success: 'all categories show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async SubCategoryfetchAll(req, res, next) {\r\n        try {\r\n            // return console.log(res,'subcategory');\r\n            const subcategories = await SubCategory.findAll({\r\n\r\n                include: [\r\n                    {\r\n                        model: Category,\r\n                        as: 'categories',\r\n                        // attributes:['title']\r\n\r\n                    }\r\n                ]\r\n            });\r\n            return res.status(200).send({ subcategories, message: { success: 'all Subcategories show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchAllChildCategory(req, res, next) {\r\n        try {\r\n            const Childcategory = await ChildCategory.findAll({\r\n                include: [\r\n                    {\r\n                        model: Category,\r\n                        as: 'categories',\r\n                    },\r\n                ]\r\n            })\r\n\r\n            return res.status(200).send({ Childcategory, message: { success: 'all Childcategories show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    // hooks function\r\n    categoriesSellerProduct(categoreisSeller, parentId = null) {\r\n        const categoriesList = [];\r\n        let categorySeller;\r\n        if (parentId == null) {\r\n            categorySeller = categoreisSeller.filter(categorySeller => categorySeller.parentId == undefined)\r\n        } else {\r\n            categorySeller = categoreisSeller.filter(categorySeller => categorySeller.parentId == parentId)\r\n\r\n        }\r\n        for (let cate of categorySeller) {\r\n            categoriesList.push({\r\n                id: cate.id,\r\n                cataloguename: cate.cataloguename,\r\n                catalogueslug: cate.catalogueslug,\r\n                parentId: cate.parentId,\r\n                children: category.categoriesSellerProduct(categoreisSeller, cate.id)\r\n            });\r\n        }\r\n        return categoriesList;\r\n    },\r\n    async createCategories(req, res, next) {\r\n        try {\r\n\r\n            const { cataloguename, catalogueslug, parentId } = req.body;\r\n            // const image = req.file.filename;\r\n            // if(!image){\r\n            // return 'not image'\r\n            const createcategories = await Catalogue.create({ cataloguename, catalogueslug, parentId })\r\n            return res.status(201).send({ createcategories, message: { success: \"category has been created by successfully!\" } })\r\n            // }\r\n            //   return  console.log(req.body);\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async findAllCategories(req, res, next) {\r\n        try {\r\n            // const { catalogue, parentId } = req.body;\r\n            const findAllcategoriesSeller = await Catalogue.findAll();\r\n            if (findAllcategoriesSeller) {\r\n                const categoryList = category.categoriesSellerProduct(findAllcategoriesSeller)\r\n                return res.status(201).send({ categoryList, message: { success: \"fetch all category successfully!\" } })\r\n            }\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n\r\n    },\r\n    async subCatelogues(req, res, next) {\r\n        try {\r\n            const sub_catelogues = await Catalogue.findAll({\r\n                where:{\r\n                    parentId:req.params.id\r\n                }\r\n            });\r\n            return res.status(201).send({sub_catelogues,message:{success:\"subcategories\"}})\r\n        } catch (error) {\r\n            return next(new Error(error));  \r\n        }\r\n        \r\n        Catalogue.findByPk(\r\n                req.params.id\r\n            \r\n        ).then(async(data) => {\r\n            if (!data) {\r\n                 return res.status(401).send({ error: 'SubCatelogues does not exist' })\r\n\r\n            }\r\n            const sub_catelogues = await Catalogue.findAll({\r\n                where:{\r\n                    parentId:data.id\r\n                }\r\n            })\r\n            return res.status(200).send({sub_catelogues, success: 'sub_catelogues success' });\r\n            next();\r\n        })\r\n    }\r\n\r\n}\r\nexport default category;","import models from '../models';\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst {Color} = models;\r\n// const {Category} = models;\r\nconst color = {\r\n    async create(req,res,next){\r\n        try {\r\n\r\n            const {name} = req.body;\r\n            console.log(req.body);\r\n            const color = await Color.create({\r\n                name\r\n            });\r\n           \r\n            return res.status(201).send({color,message:{success:'color created'}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchColor(req,res,next){\r\n        try {\r\n\r\n            const colors = await Color.findAll()\r\n           \r\n            return res.status(201).send({colors,message:{success:'fetch all colors'}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n\r\n}\r\n\r\nexport default color;\r\n","import { async } from 'regenerator-runtime';\r\nimport sequelize, { ARRAY, NUMBER } from 'sequelize';\r\nconst Stripe = require('stripe')(\"sk_test_51Kf1MjBFBTl526QUbO8TQWAuwrDX48eCgrhfS60TnEXhWqlTWHk8992hYX38jq2GadKENbTt9OS4abzK2Z23fNgH00WR6RzxP0\");\r\nimport { production } from '../config/config';\r\nconst Op = sequelize.Op;\r\n// const Transaction = sequelize.Transaction\r\nimport models from '../models';\r\n// import Productsellerdetails from '../models';\r\nconst { Products, Order, Checkout, User } = models;\r\nconst order = {\r\n    async createTransection(work) {\r\n        const t = await client.transaction();\r\n\r\n        try {\r\n            await work(t);\r\n            return t.commit();\r\n        } catch (err) {\r\n            t.rollback();\r\n            throw err;\r\n        }\r\n    },\r\n    async createCheckout(req, res, next) {\r\n        try {\r\n\r\n            // const {users, ...data} = req.body;\r\n            // let transaction = await db.sequelize.transaction({autocommit:false});\r\n\r\n            const { name, address, phone, city } = req.body;\r\n            const checkout = await Checkout.create({ name, address, phone, city }, { transaction: order.t });\r\n            // await transaction.commit();\r\n            console.log(req.body);\r\n\r\n            return res.status(201).send({ checkout, message: { success: 'checkout create successfully' } })\r\n            //}\r\n\r\n\r\n        } catch (error) {\r\n            // await transaction.rollback();\r\n            return next(new Error(error))\r\n\r\n            // console.log(e);\r\n        }\r\n\r\n    },\r\n\r\n    async createfun(req, res) {\r\n        let data = {\r\n            \"messages\": [{\r\n                \"msgFrom\": \"13223821242\",\r\n                \"msgBody\": \"Hi there\"\r\n            }, {\r\n                \"msgFrom\": \"Bill\",\r\n                \"msgBody\": \"Hello!\"\r\n            },\r\n                // { name: 'as', address: 'as', phone: 'as', city: 'as' }\r\n            ],\r\n\r\n\r\n        }\r\n\r\n        for (var key in data) {\r\n            var obj = data[key];\r\n            console.log(obj);\r\n            for (var prop in obj) {\r\n                if (obj.hasOwnProperty(prop)) {\r\n                    console.log(prop + \" = \" + obj[prop]);\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return console.log('function called');\r\n    },\r\n    async createOrder(req, res, next) {\r\n        // const t = await sequelize.transaction();\r\n        let t = await models.sequelize.transaction({ autocommit: true });\r\n\r\n        try {\r\n            return console.log(req.body);\r\n            const { name, address, phone, city } = req.body.ship;\r\n            const checkouts = await Checkout.create({ name, address, phone, city })\r\n            const createorder = req.body.order;\r\n            return Promise.all(createorder.map(async (item) => {\r\n                const orderItem = await Order.create({\r\n                    // productId: item.productId,\r\n                    userId: item.userId,\r\n                    price: item.price,\r\n                    qty: item.qty,\r\n                    checkoutId: checkouts.id\r\n                },\r\n                    { transaction: t }\r\n                );\r\n                await t.commit();\r\n                return order.Order(orderItem)\r\n            }));\r\n            // const chek = await checkouts;\r\n            //   var checkouts =  order.createCheckout();\r\n            //  console.log(checkouts.id,'checkout id');\r\n            //    console.log(req.body,'order data 1');\r\n\r\n\r\n\r\n\r\n            //    orderdata.forEach(async (element) => {\r\n\r\n            //    const order = await orderdata.bulkCreate([orderdata]);\r\n            //    return console.log(, 'order data');\r\n            // }); \r\n            // const createorder = { \r\n            //  qty : req.body.qty,\r\n            //  userId : req.body.userId,\r\n            //  productId : req.body.userId,\r\n            //  price : req.body.price,\r\n            //  checkoutId : req.body.checkoutId = checkouts.id,\r\n            // }  \r\n            // var orderSuccess = []\r\n\r\n            var createorders = req.body;\r\n            // const {qty,userId,productId,price,checkoutId=checkouts.id}= req.body\r\n            for (var key in createorders) {\r\n                var obj = createorders[key];\r\n                // let obj = key;\r\n                console.log(obj, 'obj called');\r\n\r\n\r\n            }\r\n\r\n            // const orderss = await Order.create({obj});\r\n            // return console.log(orderss,'order created successfuly');\r\n            // console.log(obj,'order create');\r\n            // console.log(obj,'obj called');\r\n            let newOrder = [];\r\n            obj.map(data => {\r\n                newOrder.push({\r\n                    productId: data.productId,\r\n                    userId: data.userId,\r\n                    price: data.price,\r\n                    qty: data.qty,\r\n                    checkoutId: data.checkoutId = checkouts.id\r\n                });\r\n            })\r\n            //  console.log(data,'created order');\r\n            const order = await Order.bulkCreate(newOrder, { transaction: transaction });\r\n            if (checkouts && order) {\r\n                await transaction.commit();\r\n            }\r\n            return console.log(typeof order, 'dont error');\r\n            // const {qty,userId,productId,price,checkoutId =checkouts.id} = req.body;\r\n            //  console.log(req.body);\r\n            //     req.body.forEach(async (element) => {\r\n            //      console.log(element,'element value');\r\n            //      const orders = await Order.bulkCreate(element);\r\n            //      console.log(orders);\r\n\r\n            //     // return res.status(201).send({data:orders,message:{success:'order created'}})\r\n            //     });\r\n\r\n\r\n\r\n\r\n\r\n        } catch (error) {\r\n            await t.rollback();\r\n            return next(new Error(error))\r\n        }\r\n    },   \r\n    async fetchOrders({ decoded }, res, next) {\r\n    try {\r\n      \r\n        const allOrders = await Order.findAll({\r\n            where: {\r\n                userId: decoded.userId\r\n            },\r\n            include: [\r\n                {\r\n                    model: Checkout,\r\n                    as: 'checkouts'\r\n                }\r\n            ]\r\n        });\r\n\r\n        return res.status(200).send({ allOrders, message: { success: 'all orders' } })\r\n    } catch (error) {\r\n        // statements\r\n        return next(new Error(error))\r\n        console.log(error);\r\n    }\r\n\r\n},\r\n    async Payment(req, res, next) {\r\n    try {\r\n        const { cartItems, token } = req.body;\r\n        const customer = await Stripe.customers.create({\r\n            email: token.email,\r\n            source: token.id\r\n        })\r\n\r\n        const charger = await Stripe.charges.create({\r\n            amount: cartItems[0].price * 100,\r\n            currency: \"PKR\",\r\n            customer: customer.id,\r\n            receipt_email: token.email,\r\n            description: `purchased the ${cartItems[0].image}`\r\n        });\r\n        return res.status(200).send(charger)\r\n    } catch (error) {\r\n        return next(new Error(error))\r\n    }\r\n}\r\n\r\n}\r\nexport default order;","import models from '../models';\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst { Product, Catalogue, ProductSaleOffer } = models;\r\nconst product = {\r\n    async create(req, res, next) {\r\n        try {\r\n            return console.log(req.body);\r\n            const { title, description, price, catalog_id, discount_price, start_date, end_date } = req.body;\r\n            const image = req.file.filename;\r\n            const product = await Product.create({\r\n                title,\r\n                description,\r\n                price,\r\n                image: image,\r\n                catalog_id\r\n            });\r\n            if (discount_price !== '' && start_date !== '' && end_date !== '') {\r\n                const product_sale_offer = await ProductSaleOffer.create({\r\n                    product_id: product.id,\r\n                    discount_price,\r\n                    start_date,\r\n                    end_date,\r\n                    status: 1\r\n                });\r\n                console.log('data has store');\r\n            } else {\r\n                console.log('data empty');\r\n            }\r\n            return res.status(201).send({\r\n                product,\r\n                message: { success: \"product has been created by successfully!\" }\r\n            });\r\n        } catch (error) {\r\n            return next(new Error(error));\r\n        }\r\n    },\r\n    CreateGUID() {\r\n        const guid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n        return console.log(guid);\r\n    },\r\n    async fetchAll(req, res, next) {\r\n        try {\r\n            const product = await Product.findAll();\r\n            return res.json({ product, message: { success: \"all product show successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchOne(req, res, next) {\r\n        try {\r\n            const Oneproductsellerdetail = await Product.findOne({\r\n                where: {\r\n                    id: req.params.id\r\n                },\r\n            });\r\n            return res.status(200).send({ Oneproductsellerdetail, message: { success: \"one product show successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n}\r\n\r\nexport default product;\r\n","import models from '../models';\r\nimport base64 from 'base-64';\r\n\r\nconst { ProductVariation, ImagesGellery,Condition,Variation} = models;\r\nconst productVariation = {\r\n\r\n    async create(req, res, next) {\r\n        try {\r\n            // const {color,size,sellersku,saleprice,quentity,conditionId,sellerproductId} = req.body;\r\n            console.log(req.body);\r\n            const createvariation = req.body;\r\n\r\n            const productvariation = [];\r\n            createvariation.map(data => {\r\n                productvariation.push({\r\n                    color: data.color,\r\n                    size: data.size,\r\n                    sellersku: data.sellersku,\r\n                    saleprice: data.saleprice,\r\n                    quentity: data.quentity,\r\n                    conditionId: data.conditionId,\r\n                    sellerproductId: data.sellerproductId,\r\n\r\n                });\r\n            })\r\n            // const productVariation = await ProductVariation.create({color,size,sellersku,saleprice,quentity,conditionId,sellerproductId})\r\n            const productVariation = await ProductVariation.bulkCreate(productvariation)\r\n            // console.log(base64.encode( productVariation,));\r\n            return base64.encode( res.status(201).send({ productVariation, message: { success: \"productVariation has been created by successfully!\" } }))\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async fetchOne(req, res, next) {\r\n        // return console.log(req.params.sellerproductId);\r\n        try {\r\n            const productVariationOne = await ProductVariation.findAll({\r\n                where: {\r\n                    sellerproductId: req.params.sellerproductId\r\n                },\r\n                // order: [\r\n                //     ['color', 'asc']\r\n                // ],\r\n                include: [\r\n                    {\r\n                    model: Variation,\r\n                    as: 'variations',\r\n                    order:[\r\n                        ['size','asc']\r\n                    ]\r\n                    },\r\n                    {\r\n                    model: ImagesGellery,\r\n                    as: 'imagesgelleries',\r\n                    order:[\r\n                        ['id','asc']\r\n                    ]\r\n                    },\r\n                    {\r\n                    model: Condition,\r\n                    as: 'conditions'\r\n                    }\r\n\r\n            ]\r\n            })\r\n            // encodeBase64(\r\n            // return console.log();\r\n            return  res.status(200).send({ productVariationOne, message: { success: 'all variation show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchAllChildCategory(req, res, next) {\r\n        try {\r\n            const Childcategory = await ChildCategory.findAll({\r\n                include: [\r\n                    {\r\n                        model: Category,\r\n                        as: 'categories',\r\n                    },\r\n                    {\r\n                        model: SubCategory,\r\n                        as: 'subcategories',\r\n                        attributes: ['name']\r\n\r\n                    }\r\n                ]\r\n            })\r\n\r\n            return res.status(200).send({ Childcategory, message: { success: 'all Childcategories show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport default productVariation;","import models from '../models';\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst {Productseller} = models;\r\n\r\nconst productseller = {\r\n    async create({body,decoded},res,next){\r\n        try {\r\n\r\n            const {name,price,} = body;\r\n            const {userId} = decoded;\r\n            // const image = req.file.filename;\r\n            // console.log( title,description,price,categoryId);\r\n            // return console.log(image);\r\n            //:params.categoryId\r\n\r\n            const productseller = await Productseller.create({name,price,userId});\r\n            console.log(productseller);\r\n            return res.status(201).send({\r\n                productseller,\r\n                userId,\r\n                // image_url:`htpp://localhost:4244/image/${req.file.filename}`,\r\n                message:{success:\"product has been created by successfully!\"}\r\n            })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async fetchAll(req, res, next){\r\n        try {\r\n\r\n        //    console.log(image_url);\r\n\r\n            const product = await Product.findAll();\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n            return res.json({product, message:{success:\"all product show successfully!\"}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport default productseller;\r\n","// import { Op } from 'sequelize/types';\r\nimport models from '../models';\r\nimport Sequelize, { col } from 'sequelize';\r\nimport { decodeBase64 } from 'bcryptjs';\r\nimport { transformSync } from '@babel/core';\r\nimport { async } from 'regenerator-runtime';\r\nimport category from './categoryController';\r\n// const {SellerProductImage} = models;\r\n\r\nconst Op = Sequelize.Op;\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst { Productsellerdetail } = models;\r\nconst { User } = models;\r\nconst { ChildCategory } = models;\r\nconst { SubCategory } = models;\r\nconst { Category } = models;\r\nconst {Color} = models;\r\nconst {Size} = models;\r\nconst {type} = models;\r\nconst {SellerShop} = models;\r\nconst {SellImage} = models;\r\nconst {SellerProductImage} = models;\r\nconst {ProductVariation} = models;\r\nconst { Catalogue } = models;\r\nconsole.log(typeof Catalogue, 'catalog');\r\n\r\n\r\nconst productsellerdetail = {\r\n    async create(req, res, next) {\r\n        try {\r\n\r\n            const {catalogues, name,price,stock} = req.body;\r\n            // const {catalogues,types,sizes,colors,name,price,stock} = req.body;\r\n            // for(let i=0; req.files !=null && i<req.files.length;i++){\r\n            //    const image = rq.files;\r\n            //      console.log( req.files[i]);\r\n            // }\r\n            // const image = req.file.filename;\r\n            // const {userId} = req.decoded;\r\n            //  console.log(image);\r\n            // return console.log(userId);\r\n            // return console.log(req.body);\r\n            // const {sellershopId} = req.decoded;\r\n            // return console.log(sellershopId);\r\n            // console.log(sellershpId,'suserid is response');\r\n\r\n            // console.log(image);\r\n            const productsellerdetail = await Productsellerdetail.create({name,price,stock});\r\n            // const productsellerdetail = await Productsellerdetail.create({name,price,stock});\r\n            // const productsellerdetail = await Productsellerdetail.create({userId,name,price,stock,image});\r\n\r\n            // req.files.forEach(async(element,index,arr) => {\r\n            //     var els =  await element.filename\r\n\r\n            //  console.log(els,'as');\r\n            // //  const productsellerdetail = await Productsellerdetail.create(data);\r\n            //     if(colors && colors.length>0 ||  sizes && sizes.length>0 || types && types.length>0 ||sellimgs && sellimgs.length>0){\r\n            //     // if(sellimg && sellimg.length>0){\r\n            if (catalogues && catalogues.length > 0) {\r\n                //         // return console.log(sellimg  );\r\n                //         // return console.log(addSellerProductImages,'variable in');\r\n                //         //  productsellerdetail.addSellerProductImages(sellimg)        \r\n                //  productsellerdetail.addColors(colors)        \r\n                //         // productsellerdetail.addSizes(sizes)  \r\n                //         // productsellerdetail.addTypes(types)  \r\n\r\n\r\n                //     //   return  console.log(prodcutsellerdetail);\r\n                productsellerdetail.addCatalogues(catalogues);\r\n            }\r\n            console.log(req.body);\r\n\r\n            // });\r\n            return res.status(201).send({\r\n                productsellerdetail,\r\n                // userId,\r\n                // colors,\r\n                // types,\r\n                // sizes,\r\n                catalogues,\r\n                // image_url:`htpp://localhost:4244/image/${req.file.filename}`,\r\n                message: { success: \"product has been created by successfully!\" }\r\n            })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async fetchAll({ decoded }, res, next) {\r\n        try {\r\n\r\n            const {userId} = decoded;\r\n        // return    console.log(userId);\r\n            const productsellerdetail = await Productsellerdetail.findAll({\r\n                // where: {\r\n                //     userId: decoded.userId\r\n                // },\r\n                // include: [\r\n                //     {\r\n                //         model: User,\r\n                //         as: 'users',\r\n                //         // through: { attributes: ['name'] }\r\n                //     },\r\n                //     {\r\n                //         model: ChildCategory,\r\n                //         as: 'childcategories',\r\n                //         attributes: ['name']\r\n                //     },\r\n                //     {\r\n                //         model: SubCategory,\r\n                //         as: 'subcategories',\r\n                //         attributes: ['name']\r\n                //     },\r\n                //     {\r\n                //         model: Category,\r\n                //         as: 'categories',\r\n                //         attributes: ['title']\r\n                //     },\r\n                //     {\r\n                //         model: ProductVariation,\r\n                //         as: 'productvariations',\r\n                //         //  attributes: ['title']\r\n                //     },\r\n                // ]\r\n\r\n            });\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n            return res.status(200).json({ productsellerdetail, message: { success: \"all product show successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async fetchAlls(req, res, next) {\r\n        try {\r\n\r\n        \r\n            const productsellerdetail = await Productsellerdetail.findAll({\r\n                        // where: {\r\n                        //     userId: req.params.userId\r\n                        // },\r\n                // include: [\r\n                //     {\r\n                //         model: User,\r\n                //         as: 'users',\r\n                //         attributes: ['name']\r\n                //     },\r\n                //     {\r\n                //         model: ChildCategory,\r\n                //         as: 'childcategories',\r\n                //         // through: { attributes: ['name'] }\r\n                //     },\r\n                //     {\r\n                //         model: Color,\r\n                //         as: 'colors',\r\n                //         attributes: ['name'],\r\n                //         //  product \r\n                //     },\r\n                //     {\r\n                //         model: Size,\r\n                //         as: 'sizes',\r\n                //         attributes: ['name'],\r\n                //         //  product \r\n                //     },\r\n                //     {\r\n                //         model: type,\r\n                //         as: 'types',\r\n                //         attributes: ['name'],\r\n                //         //  product \r\n                //     },\r\n                //     {\r\n                //         model: SellerShop,\r\n                //         as: 'sellershops',\r\n                //         attributes: ['name', 'sellerimage', 'address', 'location', 'market'],\r\n                //         //  product \r\n                //     },\r\n                //     {\r\n                //         model: SellImage,\r\n                //         as: 'sellimages',\r\n\r\n                //     },\r\n                // ]\r\n\r\n            });\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n            return res.status(200).send({ productsellerdetail, message: { success: \"all product show successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async fetchOneProduct(req, res, next) {\r\n        try {\r\n\r\n            const Oneproductsellerdetail = await Productsellerdetail.findOne({\r\n                where: {\r\n                    id: req.params.id\r\n                },\r\n                // include: [\r\n                //     {\r\n                //         model: Color,\r\n                //         as: 'colors',\r\n                //         attributes: ['name'],\r\n                //         through: { attributes: ['colorId'] }\r\n                //     },\r\n                //     {\r\n                //         model: SellImage,\r\n                //         as: 'sellimages',\r\n                //         // attributes: ['id','name']\r\n\r\n\r\n                //     },\r\n                //     {\r\n                //         model: ProductVariation,\r\n                //         as: 'productvariations',\r\n                //         // attributes: ['id','name']\r\n\r\n\r\n                //     },\r\n                // ]\r\n\r\n            });\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n            return res.status(200).send({ Oneproductsellerdetail, message: { success: \"one product show successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async ProductSearch(req, res, next) {\r\n        try {\r\n\r\n            const { search } = req.body;\r\n\r\n            const productsellerdetailSearch = await Productsellerdetail.findAll({\r\n                where: {\r\n                    name: { [Op.like]: '%' + search + '%' },\r\n                },\r\n                include: [\r\n                    {\r\n                        model: User,\r\n                        as: 'users',\r\n                        // through: { attributes: ['name'] }\r\n                    },\r\n                ]\r\n\r\n\r\n\r\n            });\r\n            // return console.log(productsellerdetailSearch);\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n            return res.status(200).json({ productsellerdetailSearch, message: { success: \"all product Search successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async ProductbySellerCatalogSlug(req, res, next) {\r\n        try {\r\n\r\n            // const { catalogueslug } = req.body;\r\n           if(!req.params){\r\n            return res.status(404).send({message:'error'})\r\n\r\n        }else{\r\n            const productbysellerslug = await Catalogue.findOne({\r\n                where: {\r\n                    catalogueslug:req.params.catalogueslug\r\n                },\r\n                include: [\r\n                    {\r\n                        model: Productsellerdetail,\r\n                        as: 'productsellerdetails',\r\n                        // through: { attributes: ['name'] }\r\n                    },\r\n                    {\r\n                        model: Catalogue,\r\n                        as: 'catalogues',\r\n                      attributes: ['id','cataloguename']\r\n                    }\r\n                ]\r\n\r\n\r\n\r\n            });\r\n            return res.status(200).json({ productbysellerslug, message: { success: \"all product Search successfully!\" } })\r\n        }\r\n            // return console.log(productsellerdetailSearch);\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n\r\n}\r\n\r\nexport default productsellerdetail;\r\n","// import { Op } from 'sequelize/types';\r\nimport models from '../models';\r\nimport Sequelize, { col } from 'sequelize';\r\nimport { decodeBase64 } from 'bcryptjs';\r\nimport { transformSync } from '@babel/core';\r\nimport { async } from 'regenerator-runtime';\r\n\r\n\r\nconst Op = Sequelize.Op;\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst { Productsellerdetail } = models;\r\nconst { User } = models;\r\nconst { ChildCategory } = models;\r\nconst { SubCategory } = models;\r\nconst { Category } = models;\r\nconst { Color } = models;\r\nconst { Size } = models;\r\nconst { type } = models;\r\nconst { SellerShop } = models;\r\nconst { SellerProductImage } = models;\r\nconst { SellImage } = models;\r\nconst { ImagesGellery } = models;\r\n\r\nconst SellerProductImages = {\r\n    async create(req, res, next) {\r\n        try {\r\n            //    for(let image of req.files){\r\n            let { productId, variationId } = req.body;\r\n            //   return   console.log(req.files,'requesting');\r\n            req.files.forEach(async (element, index, arr) => {\r\n\r\n                //  console.log(arr,'array bulk image');\r\n\r\n                // if(Array.isArray(image)&& image.length>0){\r\n                // console.log(image);\r\n                const SellerproductImage = await ImagesGellery.create({\r\n                    //    type:element.mimetype,\r\n                    //    name:element.filename,\r\n                    variationId,\r\n                    imagegellery: element.filename,\r\n\r\n                });\r\n\r\n                // if(sellerproductdetailIds && sellerproductdetailIds.length>0){\r\n                //     SellerproductImage.addProductsellerdetails(sellerproductdetailIds)       \r\n                // }\r\n\r\n                //  console.log(SellerproductImage);\r\n                //  if (!SellerproductImage) {\r\n                //         return console.log('thorw is Error');\r\n                //  }  else{\r\n                return res.status(201).send({\r\n                    SellerproductImage,\r\n                    productId,\r\n                    variationId,\r\n                    message: { success: \"Seller product image has been created by successfully!\" }\r\n                });\r\n            });\r\n\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    //   async  allImagesGelleries(req, res, next) {\r\n    //     try {\r\n    //             const allimagesgellery = await ImagesGellery.findAll({\r\n    //                 where:{\r\n    //                     id:req.params.id\r\n    //                 }\r\n    //             })\r\n\r\n    //             return res.status(201).send({\r\n    //                 SellerproductImage,\r\n    //                 productId,\r\n    //                 variationId,\r\n    //                 message: { success: \"Seller product image has been created by successfully!\" }\r\n    //             })\r\n\r\n\r\n    //     } catch (error) {\r\n    //         return next(new Error(error))\r\n    //     }\r\n    //   }\r\n}\r\n\r\n\r\nexport default SellerProductImages;","import { decodeBase64 } from 'bcryptjs';\r\nimport session from 'express-session';\r\nimport models from '../models';\r\nimport {jwtTokens}  from '../utils/sellershop';\r\nimport Sequelize from 'sequelize';\r\n\r\n    \r\nconst Op = Sequelize.Op;\r\nconst {SellerShop} = models;\r\nconst {User} = models;\r\n// const {Seller} = models;\r\nconsole.log(jwtTokens.createTokens);\r\n\r\nconst SellerShops = {\r\n    async create(req,res,next){\r\n        try{\r\n            // return console.log(req.file);\r\n        const {name,market,location,address} = req.body;\r\n        const imageUrl = 'http://localhost:4244/image/';\r\n        const {userId} = req.decoded;\r\n        const sellerimage = imageUrl+req.file.filename;\r\n        // console.log(sellerimage);\r\n       \r\n      \r\n        const sellerShop = await SellerShop.create({sellerimage,userId,name,market,location,address})\r\n        // console.log(sellerShop);\r\n        const sellerT = jwtTokens.createTokens(sellerShop)\r\n        return res.status(201).send({\r\n            sellerShop,\r\n            sellerT,\r\n            message:{success:\"sellershop has been created by successfully!\"}\r\n        })\r\n\r\n        }catch(error){\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchOne(req,res,next){\r\n        try{\r\n       \r\n        const sellerShop = await Seller.findOne({where:{id:req.params.id,include:[{model:User,as:'users'}]}});\r\n        // const sellerT = jwtTokens.createTokens(sellerShop)\r\n        // console.log(sellerT);    \r\n        return res.status(201).send({\r\n            sellerShop,\r\n            // sellerT,\r\n            message:{success:\"sellershop has been created by successfully!\"}\r\n        })\r\n\r\n        }catch(error){\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchAll({decoded},res,next){\r\n        try{\r\n        // const {sellershopname,sellershopmarketname,sellershoplocation,sellershopfulladdress} = req.body;\r\n        // const {userId} = req.decoded;\r\n    //  return  console.log(userId);\r\n    const sellerShop = await SellerShop.findAll({ \r\n        // where: {\r\n        //    userId: decoded.userId\r\n        //  },\r\n         include:[\r\n             {\r\n               model:User,\r\n               as:'users'  \r\n             }\r\n         ]\r\n         });\r\n    //  console.log(sellerShop);    \r\n        // const sellerT = jwtTokens.createTokens(sellerShop)\r\n        return res.status(201).send({\r\n            sellerShop,\r\n            // sellerT,\r\n            message:{success:\"all seller fetch successfully!\"}\r\n        })\r\n\r\n        }catch(error){\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async SellerSearch(req, res,next){\r\n        try {\r\n\r\n            const {sellersearch}  = req.body;\r\n \r\n            const SellerSearchs = await SellerShop.findAll({\r\n                    where: {\r\n                        name:{[Op.like]: '%' + sellersearch + '%'},\r\n                    },\r\n                    include: [\r\n                        {\r\n                          model: User,\r\n                          as: 'users',\r\n                            // through: { attributes: ['name'] }\r\n                        },\r\n                        ]\r\n                  \r\n                       \r\n\r\n            });\r\n            // return console.log(productsellerdetailSearch);\r\n            // return res.status(201).send({product,image_url:{image_url}, message:{success:\"all product show successfully!\"}})\r\n            return res.status(200).json({SellerSearchs, message:{success:\"seller Search successfully!\"}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n}\r\n\r\nexport default SellerShops;","// import session from \"express-session\";\r\n// console.log(session);\r\nconst sessionctl ={\r\n    async createSession(req,res,next){\r\n        try {\r\n            var usersinfo = req.session.usersinfo\r\n            if (!usersinfo) {\r\n                // req.session.views++\r\n                \r\n                res.setHeader('Content-Type', 'application/json')\r\n                // res.write('<p>views: ' + req.session.usersinfo + '</p>')\r\n                // res.write('<p>expires in: ' + (req.session.cookie.maxAge / 1000) + 's</p>')\r\n                // res.end()\r\n              } else {\r\n                req.session.usersinfo\r\n                res.end('welcome to the session demo. refresh!')\r\n              }\r\n            \r\n              console.log(  req.session.usersinfo);\r\n            return res.json(201).send(usersinfo,{success:'user info session store'})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport default sessionctl;","import models from '../models';\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst {Size} = models;\r\n// const {Category} = models;\r\nconst size = {\r\n    async create(req,res,next){\r\n        try {\r\n\r\n            const {name} = req.body;\r\n            console.log(req.body);\r\n            const size = await Size.create({\r\n                name\r\n            });\r\n            \r\n            return res.status(201).send({size,message:{success:'size created'}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n\r\n}\r\n\r\nexport default size;\r\n","import models from '../models';\r\nimport { hashPassword, jwtToken, ComparePassword } from '../utils';\r\n\r\n\r\nconst {Todo} = models;\r\nconst todos = {\r\n    async create({ body, decoded},res,next){\r\n        try{\r\n        const {title} = body;\r\n        const {userId} = decoded;\r\n        const todo = await Todo.create({title,userId})\r\n        return res.status(201).send({todo,message:{message:\"titile successfuly!\"}})\r\n        } catch (e){\r\n            return next(new Error(e));\r\n        }\r\n    },\r\n    async fetchAll({body, decoded}, req,res,next){\r\n        try {\r\n            const myTodos = await Todo.findAll({\r\n                where:{\r\n                    userId:decoded.userId\r\n                },\r\n                include: [{\r\n                    model: TodoItem,\r\n                    as: 'todoItems'\r\n                }],\r\n            });\r\n\r\n            return res.status(200).send(myTodos);\r\n        } catch (e) {\r\n            return next(new Error(e))\r\n        }\r\n    },\r\n    async fetchOne({body, decoded}, req,res,next){\r\n        try {\r\n            const myTodo = await Todo.findOne({\r\n                where:{\r\n                    id: params.todoId, userId: decoded.userId\r\n                },\r\n                include: [{\r\n                    model: TodoItem,\r\n                    as: 'todoItems'\r\n                }],\r\n            });\r\n            if(!myTodo){\r\n                return res.status(404).send({error: 'Todo not found'});     \r\n            }\r\n            return res.status(200).send(myTodo);\r\n        } catch (e) {\r\n            return next(new Error(e))\r\n        }\r\n    },\r\n\r\n    async update({body, decoded, params}, res, next){\r\n        try {\r\n            const todo = await Todo.update.findOne({\r\n                where:{\r\n                    id: params.todoId,\r\n                    userId: decoded.userId\r\n                },\r\n                \r\n            });\r\n            if(!todo){\r\n                return res.status(400).send({error: 'Wrong todo id'}); \r\n            }\r\n            const updateTodo = await Todo.update({\r\n                title:body.title || todo.title,\r\n                where:{\r\n                    id: todo.id\r\n                },  \r\n                returning: true,\r\n                plain: true\r\n            });\r\n\r\n            return res.status(200).send(updateTodo); \r\n        } catch (e) {\r\n            return next(new Error(e))\r\n        }\r\n    },\r\n\r\n    async delete({params, decoded}, res, next){\r\n        try {\r\n            const todo = await Todo.findOne({\r\n                where:{\r\n                    id: params.todoId,\r\n                    userId: decoded.userId\r\n                }\r\n            })\r\n            if(!todo){\r\n                return res.status(400).send({error: 'Wrong todo id'});\r\n            }\r\n            await todo.destroy()\r\n            return res.status(200).send({todo}); \r\n        } catch (e) {\r\n            return next(new error(e))\r\n        }\r\n    }\r\n    \r\n    \r\n}\r\nexport default todos;","import models from '../models';\r\nconst {TodoItem,Todo} = models;\r\n\r\nconst todoItems = {\r\n    async create(req,res,next){\r\n        try {\r\n            const {text, todoId} = req.body;\r\n            const items = await TodoItem.create({text,todoId});\r\n            return res.status(201).send(items);\r\n        } catch (e) {\r\n            return next(new Error(e));\r\n        }\r\n    },\r\n    async fetchAll(req,res,next){\r\n        try {\r\n            const {todoId} = req.params;\r\n            const items = await TodoItem.findAll({\r\n                where: {todoId},\r\n                include: [{\r\n                    model: Todo,\r\n                    as: 'todo'\r\n                }],\r\n            });\r\n            return res.status(200).send(items);\r\n        } catch (e) {\r\n            return next(new Error(e));\r\n        } \r\n    },\r\n    async fetchOne(req,res,next){\r\n        try {\r\n            const {todoItemId} = req.params;\r\n            const items = await TodoItem.findOne({\r\n                where: { id: todoItemId },\r\n                include: [{\r\n                    model: Todo,\r\n                    as: 'todo'\r\n                }],\r\n            });\r\n            return res.status(200).send(items);\r\n        } catch (e) {\r\n            return next(new Error(e));\r\n        }\r\n    },\r\n    async update(req,res,next){\r\n        try {\r\n            const {text} = req.body;\r\n            const item = await TodoItem.findOne({\r\n                where: {id: req.params.todoItemId},\r\n                \r\n            });\r\n            if (!item) {\r\n                return res.status(404).send({error:\"item does not exist\"})\r\n            }else{\r\n                const updateItem = await TodoItem.update(\r\n                    {text},\r\n                    {\r\n                        where:{\r\n                            id: req.params.todoItemId\r\n                        },\r\n                        returning: true,\r\n                        plain: true,\r\n                    }\r\n                    );\r\n                    return res.status(200).send(updateItem);\r\n                }\r\n            } catch (e) {\r\n            return next(new Error(e));\r\n            }\r\n    },\r\n    async delete(req,res,next){\r\n        try {\r\n            const item = await TodoItem.findOne({\r\n                where: {id: req.params.todoItemId},\r\n                \r\n            });\r\n            if (!item) {\r\n                return res.status(404).send({error:\"item does not exist\"})\r\n            }else{\r\n                    await item.destroy();\r\n                    return res.status(200).send({message:\"recode deleted successfuly!\"});\r\n                }\r\n            } catch (e) {\r\n            return next(new Error(e));\r\n            }\r\n    },\r\n}\r\nexport default todoItems;","import models from '../models';\r\n// import { ProductRepo } from '../repositories/ProductRepo';\r\nconst {type} = models;\r\n// const {Category} = models;\r\nconst types = {\r\n    async create(req,res,next){\r\n        try {\r\n\r\n            const {name} = req.body;\r\n            console.log(req.body);\r\n            const typeCreate = await type.create({\r\n                name\r\n            });\r\n          \r\n            return res.status(201).send({typeCreate,message:{success:'type created'}})\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n\r\n}\r\n\r\nexport default types;\r\n","import models from '../models';\r\nconst { Variation, ImagesGellery,Condition } = models;\r\nconst Variations = {\r\n\r\n    async create(req, res, next) {\r\n        try {\r\n            // const {cId,size,sellerSKU,saleprice,qty,conditionId,sellerproductId} = req.body;\r\n    //  return   console.log(req.body);\r\n            const createvariation = req.body;\r\n\r\n            const productvariation = [];\r\n            createvariation.map(data => {\r\n                productvariation.push({\r\n                  \r\n                    size: data.size,\r\n                    sellersku: data.sellersku,\r\n                    saleprice: data.saleprice,\r\n                    quentity: data.quentity,\r\n                    conditionId: data.conditionId,\r\n                    cId: data.cId,\r\n\r\n                });\r\n            })\r\n            // const ColorVariation = await Variation.create({cId,size,sellerSKU,saleprice,qty,conditionId,sellerproductId})\r\n            const ColorVariation = await Variation.bulkCreate(productvariation)\r\n            console.log(ColorVariation);\r\n            return res.status(201).send({ ColorVariation, message: { success: \"productVariation has been created by successfully!\" } })\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n\r\n    async fetchOne(req, res, next) {\r\n        // return console.log(req.params.sellerproductId);\r\n        try {\r\n            const colorVariationOne = await Variation.findAll({\r\n                where: {\r\n                   cId: req.params.colorId\r\n                },\r\n                order: [\r\n                    ['size', 'desc']\r\n                ],\r\n                include: [\r\n                    // {\r\n                    // model: ImagesGellery,\r\n                    // as: 'imagesgelleries'\r\n                    // },\r\n                    {\r\n                    model: Condition,\r\n                    as: 'conditions'\r\n                    }\r\n\r\n            ]\r\n            })\r\n            // return console.log();\r\n            return res.status(200).send({ colorVariationOne, message: { success: 'all variation show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    },\r\n    async fetchAllChildCategory(req, res, next) {\r\n        try {\r\n            const Childcategory = await ChildCategory.findAll({\r\n                include: [\r\n                    {\r\n                        model: Category,\r\n                        as: 'categories',\r\n                    },\r\n                    {\r\n                        model: SubCategory,\r\n                        as: 'subcategories',\r\n                        attributes: ['name']\r\n\r\n                    }\r\n                ]\r\n            })\r\n\r\n            return res.status(200).send({ Childcategory, message: { success: 'all Childcategories show successfuly!' } });\r\n        } catch (error) {\r\n            return next(new Error(error))\r\n        }\r\n    }\r\n\r\n\r\n}\r\nexport default Variations;","import models from '../models';\r\nimport validator from 'validator';\r\nconst { User } = models;\r\n\r\nexport default async (req, res, next) => {\r\n    const { name, email, password } = req.body;\r\n    if (!validator.isEmail) {\r\n        return res.status(400).send({ error: 'invalid email address' });\r\n\r\n    }\r\n    if (!name) {\r\n        return res.status(400).send({ error: 'name is required' });\r\n\r\n    }\r\n    if (!email) {\r\n        return res.status(400).send({ error: 'email is required' });\r\n\r\n    }\r\n    if (!password) {\r\n        return res.status(400).send({ error: 'password is required' });\r\n\r\n    }\r\n    const user = await User.findOne({\r\n        where: {\r\n            email\r\n        }\r\n    });\r\n    if (user) {\r\n        return res.status(409).send({ error: 'user allready exist' })\r\n    }\r\n    next();\r\n\r\n}","import jwt, { decode } from 'jsonwebtoken';\r\nimport { config } from 'dotenv';\r\nimport models from '../models';\r\nimport { jwtToken } from '../utils';\r\nimport { decodeBase64 } from 'bcryptjs';\r\nconst { User } = models;\r\nconfig();\r\nexport default (req, res, next) => {\r\n    if (!req.headers.authorization) {\r\n        return res.status(401).send({ error: 'Unauthorized' });\r\n    }\r\n    const token = req.headers.authorization.split(' ')[1];\r\n    jwt.verify(token, process.env.JWT_SECRET, { expiresIn: '24' }, (error, decoded) => {\r\n        if (error) {\r\n            return res.status(401).send({ error: \"something want wrong!\" });\r\n        }\r\n        req.decoded = decoded;\r\n        User.findByPk(decoded.userId).then((user) => {\r\n            if (!user) {\r\n                return res.status(401).send({ error: 'User does not exist' });\r\n            }\r\n            next();\r\n        })\r\n    })\r\n\r\n}","import jwt from 'jsonwebtoken';\r\nimport {config} from 'dotenv';\r\nimport models from '../models';\r\nimport { jwtToken } from '../utils';\r\nimport { async } from 'regenerator-runtime';\r\nimport { decodeBase64 } from 'bcryptjs';\r\n// const {Seller} = models;\r\nconst {SellerShop} = models;\r\nconfig();\r\nexport default  (req,res,next) =>{\r\n     console.log(req.body);\r\n    if(!req.headers.authorization){\r\n        return res.status(401).send({error:'Unauthorized'})\r\n    }\r\n    const token = req.headers.authorization.split(' ')[1];\r\n     console.log(token,'token exist');\r\n     jwt.verify(token, process.env.JWT_SECRETS,{expiresIn: '24'}, (error, decoded)=>{\r\n        if(error){\r\n             return res.status(401).send({error})\r\n\r\n        }\r\n        req.decoded = decoded;\r\n        console.log(req.deocded = decoded,'seller id');\r\n        SellerShop.findByPk(decoded.sellershopId).then((selleruser)=>{\r\n            \r\n            if(!selleruser){\r\n                   return res.status(401).send({error:'Seller id does not exist'})\r\n\r\n            }\r\n            console.log(selleruser);\r\n\r\n            next();\r\n        })\r\n    })\r\n\r\n}","import multer, { diskStorage } from \"multer\";\r\n\r\nconst imageFilter = (req, file, cb) => {\r\n  if (file.mimetype.startsWith(\"image\")) {\r\n    cb(null, true);\r\n  } else {\r\n    cb(\"Please upload only images.\", false);\r\n  }\r\n};\r\n\r\n var storage = diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, \"./public/uploads/\");\r\n  },\r\n  filename: (req, file, cb) => {\r\n    cb(null,file.fieldname+'-'+Date.now()+'-'+file.originalname);\r\n  },\r\n});\r\n\r\nvar uploadFile = multer({ storage: storage,  fileFilter: imageFilter });\r\nexport default uploadFile;","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const CatalogProduct = sequelize.define('CatalogProduct', {\n    catalogue: DataTypes.STRING,\n    parentId: DataTypes.INTEGER\n  }, {});\n  CatalogProduct.associate = function(models) {\n    \n  };\n  return CatalogProduct;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Catalogue = sequelize.define('Catalogue', {\n    cataloguename: DataTypes.STRING,\n    catalogueslug: DataTypes.STRING,\n    image: DataTypes.STRING,\n    parentId: DataTypes.INTEGER\n  }, {});\n  Catalogue.associate = function(models) {  \n    Catalogue.belongsToMany(models.Productsellerdetail,{\n      as:'productsellerdetails',\n      through: 'CatalogueSellerProduct',\n      foreignKey: 'CatalogueId',\n      otherKey:'ProductsellerdetailId'\n    });\n    Catalogue.belongsTo(models.Catalogue,{\n      as:'catalogues',\n      foreignKey: 'parentId',\n    });\n    Catalogue.hasMany(models.Product,{\n      as: 'products',\n      foreignKey: 'catalog_id',\n    })\n  };\n  return Catalogue;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const CatalogueProduct = sequelize.define('CatalogueProduct', {\n    catalogue: DataTypes.STRING,\n    parentId: DataTypes.INTEGER\n  }, {});\n  CatalogueProduct.associate = function(models) {\n    // associations can be defined here\n  };\n  return CatalogueProduct;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const CatalogueSellerProduct = sequelize.define('CatalogueSellerProduct', {\n    CatalogueId: DataTypes.INTEGER,\n    ProductsellerdetailId: DataTypes.INTEGER\n  }, {});\n  CatalogueSellerProduct.associate = function(models) {\n    // associations can be defined here\n  };\n  return CatalogueSellerProduct;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Categories = sequelize.define('Categories', {\n    title: DataTypes.STRING,\n    parentId: DataTypes.INTEGER\n  }, {});\n  Categories.associate = function(models) {\n    // Categories.\n  };\n  return Categories;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const CategorSellerProduct = sequelize.define('CategorSellerProduct', {\n    categoryName: DataTypes.STRING,\n    image: DataTypes.STRING,\n    mainCategory: DataTypes.STRING\n  }, {});\n  CategorSellerProduct.associate = function(models) {\n    // associations can be defined here\n  };\n  return CategorSellerProduct;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Category = sequelize.define('Category', {\n    title: DataTypes.STRING,\n    description: DataTypes.STRING\n  }, {});\n  Category.associate = function (models) {\n    Category.hasMany(models.SubCategory, {\n      foreignKey: 'categoryId',\n      as: 'subcategories',\n     \n    })\n\n  };\n  return Category;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Catelogue = sequelize.define('Catelogue', {\n    cateloguename: DataTypes.STRING,\n    parentId: DataTypes.INTEGER\n  }, {});\n  Catelogue.associate = function(models) {\n    // associations can be defined here\n    Catelogue.belongsTo(models.Catelogue,{\n      as: 'catelogues',\n      foreignKey: 'parentId',\n    })\n  };\n  return Catelogue;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Checkout = sequelize.define('Checkout', {\n    name: DataTypes.STRING,\n    address: DataTypes.STRING,\n    phone: DataTypes.STRING,\n    city: DataTypes.STRING\n  }, {});\n  Checkout.associate = function(models) {\n    // associations can be defined here\n    Checkout.hasMany(models.Order)\n  };\n  return Checkout;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const ChildCategory = sequelize.define('ChildCategory', {\n    name: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER,\n    subcategoryId: DataTypes.INTEGER\n  }, {});\n  ChildCategory.associate = function(models) {\n    ChildCategory.belongsTo(models.SubCategory,{\n      as:'subcategories',\n      foreignKey:'subcategoryId'\n    });\n    ChildCategory.belongsTo(models.Category,{\n      as:'categories',\n      foreignKey:'categoryId'\n      \n    })\n  };\n  return ChildCategory;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Color = sequelize.define('Color', {\n    name: DataTypes.STRING\n  }, {});\n  Color.associate = function(models) {\n    // associations can be defined here\n    Color.belongsToMany(models.Productsellerdetail,{\n      as:'productsellerdetails',\n      through: 'ProductEntery',\n      foreignKey:'colorId',\n      otherKey: 'productselllerId'\n    })\n  };\n  return Color;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Condition = sequelize.define('Condition', {\n    condition: DataTypes.STRING\n  }, {});\n  Condition.associate = function(models) {\n    // associations can be defined here\n    Condition.hasMany(models.ProductVariation,{\n      foreignKey:'conditionId',\n      as:'productvariations'\n    })\n  };\n  return Condition;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const ImagesGellery = sequelize.define('ImagesGellery', {\n    imagegellery: DataTypes.STRING,\n    variationId: DataTypes.INTEGER,\n    productId: DataTypes.INTEGER\n  }, {});\n  ImagesGellery.associate = function(models) {\n    ImagesGellery.belongsTo(models.Productsellerdetail,{\n      foreignKey:'productId',\n        as:'products'\n    })\n    ImagesGellery.belongsTo(models.ProductVariation,{\n      foreignKey:'variationId',\n        as:'productvariations'\n    })\n  };\n  return ImagesGellery;\n};","'use strict';\n\nimport fs,{readdirSync} from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport envVars from  '../config/config';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\nconst config = envVars[env];\nconst db = {};\n\nlet sequelize;\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nreaddirSync(__dirname)\n  .filter(file => {\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\n  })\n  .forEach(file => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n  \nconst context = require.context('.', true, /^\\.\\/(?!index\\.js).*\\.js$/, 'sync')\ncontext.keys().map(context).forEach(module => {\n  const sequelizeModel = module(sequelize, Sequelize);\n  db[sequelizeModel.name] = sequelizeModel;\n});\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nexport default db;\n","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Order = sequelize.define('Order', {\n    qty: DataTypes.INTEGER,\n    price: DataTypes.STRING,\n    // productId: DataTypes.INTEGER,\n    checkoutId: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER\n  }, {});\n  Order.associate = function (models) {\n    // associations can be defined here\n    Order.belongsTo(models.Checkout, {\n      as: 'checkouts',\n      foreignKey: 'checkoutId',\n\n    });\n    // Order.belongsTo(models.Product, {\n    //   as: 'products',\n    //   foreignKey: 'productId',\n\n    // });\n    // Order.belongsTo(models.Productsellerdetail, {\n    //   as: 'productsellerdetails',\n    //   foreignKey: 'productId',\n\n    // });\n    // Order.belongsTo(models.User, {\n    //   as: 'users',\n    //   foreignKey: 'userId',\n\n    // }); \n  };\n  return Order;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Product = sequelize.define('Product', {\n    title: DataTypes.STRING,\n    description: DataTypes.STRING,\n    price: DataTypes.STRING,\n    image: DataTypes.STRING,\n    catalog_id: DataTypes.INTEGER,\n    status: DataTypes.BOOLEAN,\n\n  }, {});\n  Product.associate = function (models) {\n    Product.belongsTo(models.Catalogue, {\n      as: 'catalogue',\n      foreignKey: 'catalog_id',\n    });\n    Product.hasMany(models.ProductSaleOffer, {\n      as: 'productsaleoffers',\n      foreignKey: 'product_id',\n    });\n    // Product.hasMany(models.Order, {\n    //   as: 'orders',\n    //   foreignKey: 'productId',\n    // });\n  };\n  return Product;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const ProductEntery = sequelize.define('ProductEntery', {\n    productselllerId: DataTypes.INTEGER,\n    colorId: DataTypes.INTEGER,\n    sizeId: DataTypes.INTEGER,\n    typeId: DataTypes.INTEGER\n  }, {});\n  ProductEntery.associate = function(models) {\n    // associations can be defined here\n  };\n  return ProductEntery;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const ProductSaleOffer = sequelize.define('ProductSaleOffer', {\n    product_id: DataTypes.INTEGER,\n    discount_price: DataTypes.STRING,\n    start_date: DataTypes.DATE,\n    end_date: DataTypes.DATE,\n    status: DataTypes.BOOLEAN\n  }, {});\n  ProductSaleOffer.associate = function (models) {\n    // associations can be defined here\n    ProductSaleOffer.belongsTo(models.Product, {\n      as: 'products',\n      foreignKey: 'product_id',\n    });\n  };\n  return ProductSaleOffer;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Productseller = sequelize.define('Productseller', {\n    name: DataTypes.STRING,\n    price: DataTypes.STRING,\n    userId: DataTypes.INTEGER\n  }, {});\n  Productseller.associate = function(models) {\n    Productseller.belongsTo(models.User,{\n\n      as:'users',\n      foreignKey: 'userId',\n\n    });\n  };\n  return Productseller;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Productsellerdetail = sequelize.define('Productsellerdetail', {\n    name: DataTypes.STRING,\n    price: DataTypes.STRING,\n    image: DataTypes.STRING,\n    stock: DataTypes.INTEGER,\n    userId: DataTypes.INTEGER,\n    categoryId: DataTypes.INTEGER,\n    childcategoryId: DataTypes.INTEGER,\n  }, {});\n  Productsellerdetail.associate = function(models) {\n    // associations can be defined here\n    Productsellerdetail.belongsTo(models.User,{\n      as:'users',\n      foreignKey: 'userId',\n    });\n    Productsellerdetail.belongsTo(models.Category,{\n      as:'categories',\n      foreignKey: 'categoryId',\n    });\n    Productsellerdetail.belongsTo(models.ChildCategory,{\n      as:'childcategories',\n      foreignKey: 'childcategoryId',\n    });\n    // Productsellerdetail.hasMany(models.Order,{\n    //   as:'orders',\n    //   foreignKey: 'productId',\n    // });\n    Productsellerdetail.belongsToMany(models.Color,{\n      as:'colors',\n      through: 'ProductEntery',\n      foreignKey:'productselllerId',\n      otherKey: 'colorId'\n    })\n    Productsellerdetail.belongsToMany(models.Size,{\n      as:'sizes',\n      through: 'ProductEntery',\n      foreignKey:'productselllerId',\n      // otherKey: 'colorId'\n    })\n     Productsellerdetail.belongsToMany(models.type,{\n      as:'types',\n      through: 'ProductEntery',\n      foreignKey:'productselllerId',\n      // otherKey: 'colorId'\n    })\n    \n    Productsellerdetail.belongsToMany(models.SellerProductImage,{\n      as:'sellerproductimages',\n      through: 'SellerProductImageSellerProductDetail',\n      foreignKey: 'sellerproductdetailId',\n      otherKey:'sellerproductimageId'\n    })\n    Productsellerdetail.hasMany(models.SellImage,{\n      foreignKey:'productsellerId',\n      as:'sellimages'\n    })\n  Productsellerdetail.hasMany(models.ImagesGellery,{\n    foreignKey:'productId',\n    as:'ImagesGelleries',\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE'\n  })\n  Productsellerdetail.hasMany(models.ProductVariation,{\n    foreignKey:'sellerproductId',\n    as:'productvariations',\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE'\n  })\n  Productsellerdetail.hasMany(models.Variation,{\n    foreignKey:'sellerproductId',\n    as:'variations',\n    onDelete: 'CASCADE',\n    onUpdate: 'CASCADE'\n  })\n  Productsellerdetail.belongsToMany(models.Catalogue,{\n    as:'catalogues',\n    through: 'CatalogueSellerProduct',\n    foreignKey: 'ProductsellerdetailId',\n    otherKey:'CatalogueId'\n  })\n};\n  return Productsellerdetail;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const ProductVariation = sequelize.define('ProductVariation', {\n    color: DataTypes.STRING,\n    size: DataTypes.STRING,\n    sellersku: DataTypes.STRING,\n    conditionId: DataTypes.INTEGER,\n    saleprice: DataTypes.DOUBLE,\n    quentity: DataTypes.INTEGER,\n    sellerproductId: DataTypes.INTEGER\n  }, {});\n  ProductVariation.associate = function (models) {\n    // associations can be defined here\n    ProductVariation.belongsTo(models.Condition,\n      { \n        foreignKey: 'conditionId', \n        as: 'conditions' \n      })\n    ProductVariation.belongsTo(models.Productsellerdetail,\n      { \n        foreignKey: 'sellerproductId', \n        as: 'productsellerdetails' \n      })\n    ProductVariation.hasMany(models.ImagesGellery,\n      { \n        foreignKey: 'variationId', \n        as: 'imagesgelleries' \n      })\n    ProductVariation.hasMany(models.Variation,\n      { \n        foreignKey: 'cId', \n        as: 'variations' \n      })\n  };\n  return ProductVariation;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const SellerProductImage = sequelize.define('SellerProductImage', {\n    sellimg: DataTypes.STRING\n  }, {});\n  SellerProductImage.associate = function(models) {\n    SellerProductImage.belongsToMany(models.Productsellerdetail,{\n      as:'productsellerdetails',\n      through: 'SellerProductImageSellerProductDetails',\n      foreignKey:'sellerproductimageId',\n      otherKey: 'sellerproductdetailId'\n    })\n  };\n  return SellerProductImage;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const SellerProductImageSellerProductDetail = sequelize.define('SellerProductImageSellerProductDetail', {\n    sellerproductimageId: DataTypes.INTEGER,\n    sellerproductdetailId: DataTypes.INTEGER\n  }, {});\n  SellerProductImageSellerProductDetail.associate = function(models) {\n    // associations can be defined here\n  };\n  return SellerProductImageSellerProductDetail;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const SellerShop = sequelize.define('SellerShop', {\n    name: DataTypes.STRING,\n    market: DataTypes.STRING,\n    location: DataTypes.STRING,\n    address: DataTypes.STRING,\n    sellerimage: DataTypes.STRING,\n    userId: DataTypes.INTEGER\n  }, {});\n  SellerShop.associate = function(models) {\n    // associations can be defined here\n    SellerShop.belongsTo(models.User,{\n      as:'users',\n      foreignKey: 'userId'\n    });\n  };\n  return SellerShop;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const SellImage = sequelize.define('SellImage', {\n    sellimage: DataTypes.STRING,\n    productsellerId: DataTypes.INTEGER\n  }, {});\n  SellImage.associate = function(models) {\n    SellImage.belongsTo(models.Productsellerdetail,{\n      foreignKey:'productsellerId',\n        as:'productsellerdetails'\n    })\n  };\n  return SellImage;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Size = sequelize.define('Size', {\n    name: DataTypes.STRING\n  }, {});\n  Size.associate = function(models) {\n    // associations can be defined here\n    // Size.belongsToMany(models.ProductEnter,{\n    //   as:'sizes',\n    //   through: 'productenters',\n    // })\n    Size.belongsToMany(models.Productsellerdetail,{\n      as:'productsellerdetails',\n      through: 'ProductEntery',\n      foreignKey:'sizeId',\n      // otherKey: 'productsellerId'\n    })\n  };\n  return Size;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const SubCategory = sequelize.define('SubCategory', {\n    brandName: DataTypes.STRING,\n    categoryId: DataTypes.INTEGER\n  }, {});\n  SubCategory.associate = function(models) {\n    SubCategory.belongsTo(models.Category,{\n      as:'categories',\n      foreignKey:'categoryId'\n      \n    })\n  };\n  return SubCategory;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Todo = sequelize.define('Todo', {\n    title: DataTypes.STRING,\n    userId: DataTypes.INTEGER\n  }, {});\n  Todo.associate = function(models) {\n    Todo.belongsTo(models.User,{\n      as:'users',\n      foreignKey: 'userId',\n\n    });\n    Todo.hasMany(models.TodoItem,{\n      as:'todoitems',\n      foreignKey: 'todoId',\n\n    })\n\n  };\n  return Todo;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const TodoItem = sequelize.define('TodoItem', {\n    text: DataTypes.STRING,\n    todoId: DataTypes.INTEGER\n  }, {});\n  TodoItem.associate = function(models) {\n    TodoItem.belongsTo(models.Todo,{\n      as:'todo',\n      foreignKey:'todoId',\n    })\n  };\n  return TodoItem;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const type = sequelize.define('type', {\n    name: DataTypes.STRING\n  }, {});\n  type.associate = function(models) {\n    // associations can be defined here\n    // type.belongsToMany(models.ProductEnter,{\n    //   as:'types',\n    //   through: 'productenters',\n    // })\n    type.belongsToMany(models.Productsellerdetail,{\n      as:'productsellerdetails',\n      through: 'ProductEntery',\n      foreignKey:'typeId',\n      // otherKey: 'productsellerId'\n    })\n  };\n  return type;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const User = sequelize.define('User', {\n    name: DataTypes.STRING,\n    email: DataTypes.STRING,\n    password: DataTypes.STRING,\n    verifiedAccount: DataTypes.BOOLEAN\n  }, {});\n  User.associate = function(models) {\n   // User.hasMany(models.Todo,{\n   //   as: 'todos',\n   //   foreignKey:'userId',\n   // });\n   // User.hasMany(models.Productseller,{\n   //   as: 'productsellers',\n   //   foreignKey:'userId',\n   // });\n   // User.belongsTo(models.Productseller,{\n   //   as: 'productseller',\n   //   foreignKey:'userId',\n   // });\n   User.hasMany(models.Productsellerdetail,{\n     as: 'productsellerdetails',\n     foreignKey:'userId',\n   });\n    User.hasMany(models.Order,{\n     as: 'orders',\n     foreignKey:'userId',\n   });\n    User.hasMany(models.SellerShop,{\n     as: 'sellershops',\n     foreignKey:'userId',\n   });\n\n   // User.belongsToMany(models.Order,{\n   //      through: 'UserOrderProductseller'\n   //  })\n  // User.belongsToMany(models.Order,{\n  //       as:'orders',\n  //       through: 'OrderUsers',\n  //       foreignKey:'userId',\n  //       otherKey:'orderId'\n\n  //   });\n  User.belongsToMany(models.Order,{\n        as:'orderes',\n        through:'OrderUsers',\n        foreignKey:'user_id',\n        otherKey:'order_id'\n    });\n  };\n  return User;\n};","'use strict';\nmodule.exports = (sequelize, DataTypes) => {\n  const Variation = sequelize.define('Variation', {\n    size: DataTypes.STRING,\n    sellerSKU: DataTypes.STRING,\n    saleprice: DataTypes.STRING,\n    conditionId: DataTypes.INTEGER,\n    qty: DataTypes.INTEGER,\n    sellerproductId: DataTypes.UUID,\n    cId: DataTypes.UUID\n  }, {});\n  Variation.associate = function (models) {\n    Variation.belongsTo(models.Productsellerdetail,\n      {\n        foreignKey: 'sellerproductId',\n        as: 'productsellerdetails'\n      })\n    Variation.belongsTo(models.Condition,\n      {\n        foreignKey: 'conditionId',\n        as: 'conditions'\n      })\n    Variation.belongsTo(models.ProductVariation, {\n      foreignKey: 'cId',\n      as: 'productvariations'\n    })\n  };\n  return Variation;\n};","import { config } from \"dotenv\";\r\nimport mailgun from \"mailgun-js\";\r\nimport nodemailer from \"nodemailer\";\r\nimport jwt from \"jsonwebtoken\";\r\nconfig();\r\nconst SendMail = () =>\r\n  mailgun({\r\n    apiKey: process.env.MAIL_API_KEY,\r\n    domain: process.env.MAIL_DOMAIN_KEY,\r\n  });\r\n\r\nexport default SendMail;\r\n\r\nexport const Email = async (user) => {\r\n  let testAccount = await nodemailer.createTestAccount();\r\n  // create reusable transporter object using the default SMTP transport\r\n  const token = jwt.sign({ userInfo: user.id }, process.env.JWT_SECRET, {\r\n    expiresIn: \"24h\",\r\n  });\r\n  let transporter = nodemailer.createTransport({\r\n    host: \"smtp.ethereal.email\",\r\n    port: 587,\r\n    secure: false, // true for 465, false for other ports\r\n    debug: true, // true for 465, false for other ports\r\n    logger: true, // true for 465, false for other ports\r\n    connection: false, // true for 465, false for other ports\r\n    auth: {\r\n      user: process.env.EMAIL_USER, // generated ethereal user\r\n      pass: process.env.EMAIL_PASS, // generated ethereal password\r\n    },\r\n    tls: {\r\n      rejectUnauthorized: true,\r\n    },\r\n  });\r\n  // let transporter = nodemailer.createTransport({\r\n  //   host: \"smtp.gmail.com\",\r\n  //   port: 587,\r\n  //   secure: false, // true for 465, false for other ports\r\n  //   auth: {\r\n  //     user: process.env.EMAIL_USER, // generated ethereal user\r\n  //     pass: process.env.EMAIL_PASS, // generated ethereal password\r\n  //   },\r\n  // });\r\n  let info = await transporter.sendMail({\r\n    from: '\"Fred Foo 👻\" <foo@example.com>', // sender address\r\n    to: `${user.email}`, // list of receivers\r\n    subject: \"Hello ✔\", // Subject line\r\n    text: \"Hello world?\", // plain text body\r\n    html: `<b><a href=\"http://localhost:3000/AccountVerified/${token}\">verified account</a></b>`, // html body\r\n  });\r\n  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>\r\n  console.log(\"Message sent: %s\", info.messageId);\r\n  // Preview only available when sending through an Ethereal account\r\n  console.log(\"Preview URL: %s\", nodemailer.getTestMessageUrl(info));\r\n  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...\r\n};\r\n","import auth from \"../controllers/authController\"\r\nimport validator from \"../middlewares/auth\";\r\nimport todos from \"../controllers/todoController\";\r\nimport authorize from \"../middlewares/authorize\";\r\nimport todoItems from \"../controllers/todoItemsController\";\r\nimport category from '../controllers/categoryController';\r\nimport product from \"../controllers/productController\";\r\nimport productsellerController from '../controllers/productsellerController';\r\nimport productsellerdetailController from '../controllers/productsellerdetailController'\r\nimport uploadFile from \"../middlewares/upload\";\r\nimport orderController from '../controllers/orderController';\r\nimport colorController from \"../controllers/colorController\";\r\nimport sizeController from \"../controllers/sizeController\";\r\nimport typeController from \"../controllers/typeController \";\r\nimport SellerShopController from '../controllers/sellerShopController'\r\nimport authorizeSellershop from \"../middlewares/authorizeSellershop\";\r\nimport sessionctlContorller from \"../controllers/sessionController\";\r\nimport SellerProductImageController from \"../controllers/sellerProductImageController\";\r\nimport productVariationController from \"../controllers/productVariationController\";\r\nimport variationController from \"../controllers/variationController\";\r\nexport const routes = (app) => {\r\n    /*Main Category*/\r\n    app.post('/api/create_category', category.create);\r\n    app.get('/api/all_category', category.MainCategoryfetchAll);\r\n    app.get('/api/auth/sign', (req, res) => res.send({ message: 'message is' }));\r\n\r\n    /*Sub category*/\r\n    app.post('/api/create_subcategory', category.SubCategoryCreate);\r\n    app.get('/api/all_subcategory', category.SubCategoryfetchAll);\r\n    app.get('/api/auth/sign', (req, res) => res.send({ message: 'message is' }));\r\n\r\n    /*Child category*/\r\n    app.post('/api/create_childcategory', category.ChildCategoryCreate);\r\n    app.get('/api/all_child_category', category.fetchAllChildCategory);\r\n    app.get('/api/auth/sign', (req, res) => res.send({ message: 'message is' }));\r\n\r\n\r\n    // seller Sign in and Singup routes\r\n    app.post('/api/auth/sign_up', validator, auth.signUp);\r\n    app.post('/api/auth/sign_in', auth.signIn);\r\n    app.get('/api/auth/alluser', auth.fetchAll)\r\n    app.get('/api/auth/account-unverified-user/:id', auth.fetchOneUserUnverified)\r\n    app.patch('/api/auth/account-verification/:id', auth.AccountVerification)\r\n\r\n    app.post('/api/todos', authorize, todos.create);\r\n    app.get('/api/todos', authorize, todos.fetchAll);\r\n    app.get('/api/todos/:todoId', authorize, todos.fetchOne);\r\n    app.put('/api/todos/:todoId', authorize, todos.update);\r\n    app.delete('/api/todos/:todoId', authorize, todos.delete);\r\n\r\n    app.post('/api/todoItems', todoItems.create);\r\n    app.get('/api/todoItems/:todoId', todoItems.fetchAll);\r\n    app.get('/api/todoItems/:todoItemId', todoItems.fetchOne);\r\n    app.put('/api/todoItems/:todoItemId', todoItems.update);\r\n    app.delete('/api/todoItems/:todoItemId', todoItems.delete);\r\n\r\n    app.post('/api/create_product', uploadFile.single('image', 8), product.create);\r\n    app.get('/api/all-product', product.fetchAll);\r\n\r\n\r\n    app.post('/api/create-productseller', authorize, productsellerController.create);\r\n\r\n\r\n    // app.post('/api/productsellerdetail', uploadFile.array('sellimg', 8), authorize, productsellerdetailController.create);\r\n    // app.post('/api/productsellerdetail', uploadFile.array('sellimg', 8), authorize, productsellerdetailController.create);\r\n    app.post('/api/productsellerdetail', uploadFile.single('image'), productsellerdetailController.create);\r\n    app.get('/api/all-productsellerdetail', authorize, productsellerdetailController.fetchAll);\r\n    app.get('/api/alls-productsellerdetail', productsellerdetailController.fetchAlls);\r\n    app.get('/api/one-productsellerdetails/:id', productsellerdetailController.fetchOneProduct);\r\n    app.get('/api/one-productsellerdetail/:id', product.fetchOne);\r\n    app.post('/api/productsearch', productsellerdetailController.ProductSearch);\r\n    app.get('/api/product_by_seller_catalog_slug/:catalogueslug', productsellerdetailController.ProductbySellerCatalogSlug);\r\n\r\n    app.post('/api/createorder', orderController.createOrder);\r\n    app.get('/api/allorders', authorize, orderController.fetchOrders);\r\n    // app.post('/api/checkout',morderController.createCheckout);\r\n    app.post('/api/payment', orderController.Payment)\r\n\r\n    app.post('/api/create_color', colorController.create);\r\n    app.get('/api/all_color', colorController.fetchColor);\r\n    app.post('/api/create_size', sizeController.create);\r\n    app.post('/api/create_type', typeController.create);\r\n\r\n    /**Seller shop Routing**/\r\n    app.post('/api/seller_shop', uploadFile.single('sellerimage'), authorize, SellerShopController.create);\r\n    app.get('/api/seller_shop_one/:id', SellerShopController.fetchOne);\r\n    app.get('/api/seller_shop_seller', SellerShopController.fetchAll);\r\n    app.post('/api/sellersearch', SellerShopController.SellerSearch);\r\n\r\n    // user info session store server side\r\n    // app.post('/api/seller_user_info', sessionctlContorller.createSession)\r\n    ///////////////////////////\r\n    // productVarationImagesGelleries\r\n    app.post('/api/seller_product_image', uploadFile.array('image', 8), SellerProductImageController.create);\r\n    ///////////////////////.\r\n    // product variation route \r\n    app.post('/api/product_variation', productVariationController.create);\r\n    app.get('/api/product_variation_one/:sellerproductId', productVariationController.fetchOne);\r\n\r\n    ////////////////////////////\r\n    // variationRoutes\r\n    app.post('/api/color_variation', variationController.create);\r\n    app.get('/api/color_variation_one/:colorId', variationController.fetchOne)\r\n\r\n    ///////////\r\n    // categories ///routes\r\n    app.post('/api/create_catelogue_categories', uploadFile.single('image'), category.createCategories);\r\n    app.get('/api/file_all_catelogue_categories', category.findAllCategories);\r\n    app.get('/api/sub_catelogues/:id', category.subCatelogues);\r\n    // app.get('/api/file_all_catelogue_categories', category.ProductbySellerCatalogSlug);\r\n\r\n};\r\n\r\nexport default routes;","import jwt from 'jsonwebtoken';\r\nimport bcrypt from 'bcryptjs';\r\nimport {config} from 'dotenv';\r\n\r\n// require('dotenv').config();\r\nconfig();\r\nexport const jwtToken = {\r\n  createToken({ id, email }) {\r\n    return jwt.sign(\r\n      { userId: id, email },\r\n      process.env.JWT_SECRET,\r\n      { expiresIn: '24h' }\r\n    );\r\n  },\r\n  verifyToken(token) {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET, { expiresIn: '24h', });\r\n    console.log(deocded,'them decoded');\r\n    return decoded;\r\n  }\r\n};\r\n export const hashPassword = (password) => bcrypt.hashSync(password,12);\r\n export const ComparePassword = (password, hash) => bcrypt.compareSync(password, hash);\r\n\r\n\r\n","import jwt from 'jsonwebtoken';\r\nimport bcrypt from 'bcryptjs';\r\nimport {config} from 'dotenv';\r\n\r\n// require('dotenv').config();\r\nconfig();\r\nexport const jwtTokens = {\r\n  createTokens({ id }) {\r\n    return jwt.sign(\r\n      { sellershopId: id},\r\n      process.env.JWT_SECRETS,\r\n      { expiresIn: '24h' }\r\n    );\r\n  },\r\n  verifyTokens(token) {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRETS, { expiresIn: '24h', });\r\n    return decoded;\r\n  }\r\n}\r\n\r\n","module.exports = require(\"@babel/core\");;","module.exports = require(\"base-64\");;","module.exports = require(\"bcryptjs\");;","module.exports = require(\"body-parser\");;","module.exports = require(\"cookie-parser\");;","module.exports = require(\"cors\");;","module.exports = require(\"dotenv\");;","module.exports = require(\"express\");;","module.exports = require(\"express-session\");;","module.exports = require(\"fs\");;","module.exports = require(\"jsonwebtoken\");;","module.exports = require(\"mailgun-js\");;","module.exports = require(\"morgan\");;","module.exports = require(\"multer\");;","module.exports = require(\"nodemailer\");;","module.exports = require(\"path\");;","module.exports = require(\"regenerator-runtime\");;","module.exports = require(\"sequelize\");;","module.exports = require(\"stripe\");;","module.exports = require(\"validator\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./api/app.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}